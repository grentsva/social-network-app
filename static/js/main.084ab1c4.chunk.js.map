{"version":3,"sources":["utils/object-helpers.js","redux/users-reducer.js","api/api.js","assets/images/preloader.svg","components/common/Preloader/Preloader.module.css","components/Profile/ProfileStatus/ProfileStatus.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/LoginPage/LoginPage.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/Preloader/Preloader.jsx","assets/images/user.png","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","dispatch","a","usersAPI","getUsers","data","totalCount","count","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","usersReducer","state","action","followed","filter","id","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","Boolean","window","location","hostname","match","Navbar","className","styles","nav","item","to","activeClassName","activeLink","active","SEND_MESSAGE","dialogs","name","messages","message","dialogsReducer","body","newMessageBody","length","DialogItem","props","path","dialog","Message","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","Field","validate","required","value","maxLengthCreator","maxLength","maxLength50","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElements","d","key","messagesElements","m","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","sendMessageCreator","Component","RedirectComponent","this","React","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","formSummaryError","Object","keys","contacts","ProfileData","isOwner","goToEditMode","profileDescription","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","editButton","onClick","Contact","contact","ProfileInfo","Preloader","fullName","profileData","src","photos","large","userPhoto","mainPhoto","alt","target","files","initialValues","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","getUserProfile","profileReducer","newPost","newPostText","p","postId","Post","maxLength10","MyPosts","memo","postsElements","reverse","postsBlock","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","push","refreshProfile","prevProps","prevState","snapshot","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","logo","loginBlock","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","LoginReduxForm","initialized","appReducer","sidebarReducer","reducers","combineReducers","usersPage","formReducer","sidebar","app","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","UsersContainer","lazy","App","initializeApp","render","DialogsContainer","Suspense","fallback","AppContainer","promise","all","SocialNetworkApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader"],"mappings":"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","file":"static/js/main.084ab1c4.chunk.js","sourcesContent":["export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map((u) => {\r\n    if (u[objPropName] === itemId) {\r\n      return { ...u, ...newObjProps };\r\n    }\r\n    return u;\r\n  });\r\n};\r\n","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'samurai-network/follow/FOLLOW';\r\nconst UNFOLLOW = 'samurai-network/follow/UNFOLLOW';\r\nconst SET_USERS = 'samurai-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: true }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: false }),\r\n      };\r\n    case SET_USERS: {\r\n      return { ...state, users: [...action.users] };\r\n    }\r\n    case SET_CURRENT_PAGE: {\r\n      return { ...state, currentPage: action.currentPage };\r\n    }\r\n    case SET_TOTAL_USERS_COUNT: {\r\n      return { ...state, totalUsersCount: action.count };\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching };\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id !== action.userId),\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n  isFetching,\r\n  userId,\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': 'db859786-8663-4823-a587-15dd10c849f9',\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n  savePhoto(photoFile) {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile);\r\n\r\n    return instance.put(`profile/photo`, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n  },\r\n  saveProfile(profile) {\r\n    return instance.put(`profile`, profile);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false, captcha = null) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  },\r\n};\r\n\r\nexport const securityAPI = {\r\n  getCaptchaUrl() {\r\n    return instance.get(`security/get-captcha-url`);\r\n  },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.de3c9476.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1wDbB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__3j_9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2K8XG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__23NiJ\",\"item\":\"Navbar_item__35w9N\",\"activeLink\":\"Navbar_activeLink__3rerr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3COqm\",\"dialogsItems\":\"Dialogs_dialogsItems__2_eON\",\"active\":\"Dialogs_active__24fgn\",\"messages\":\"Dialogs_messages__2Fb6b\",\"message\":\"Dialogs_message__3anMZ\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/profile\" activeClassName={styles.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={`${styles.item} ${styles.active}`}>\r\n        <NavLink to=\"/dialogs\" activeClassName={styles.activeLink}>\r\n          Messages\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/users\" activeClassName={styles.activeLink}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/news\" activeClassName={styles.activeLink}>\r\n          News\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/music\" activeClassName={styles.activeLink}>\r\n          Music\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.item}>\r\n        <NavLink to=\"/settings\" activeClassName={styles.activeLink}>\r\n          Settings\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const SEND_MESSAGE = 'samurai-network/profile/SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { id: 1, name: 'Dimych' },\r\n    { id: 2, name: 'Andrew' },\r\n    { id: 3, name: 'Sveta' },\r\n    { id: 4, name: 'Sasha' },\r\n    { id: 5, name: 'Viktor' },\r\n    { id: 6, name: 'Valera' },\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'Hi' },\r\n    { id: 2, message: 'How are you?' },\r\n    { id: 3, message: 'Yo' },\r\n    { id: 4, message: 'Yo' },\r\n    { id: 5, message: 'Yo' },\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: state.messages.length + 1, message: body }],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({\r\n  type: SEND_MESSAGE,\r\n  newMessageBody,\r\n});\r\n\r\nexport default dialogsReducer;\r\n","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={styles.dialog + ' ' + styles.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport styles from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return <div className={styles.dialog}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n  const hasError = touched && error;\r\n  return (\r\n    <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n      <div>{children}</div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    />\r\n    {text}\r\n  </div>\r\n);\r\n","export const required = value => {\r\n  if (value) return undefined;\r\n  return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n  if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          placeholder=\"Enter your message\"\r\n          name=\"newMessageBody\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm);\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = props => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map(d => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map(m => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = values => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n  return (\r\n    <div className={styles.dialogs}>\r\n      <div className={styles.dialogsItems}>{dialogsElements}</div>\r\n      <div className={styles.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.status}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || ''}</span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\nimport styles from '../../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <div className={styles.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Looking for a job</b>:\r\n        {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n      </div>\r\n\r\n      <div>\r\n        <b>My professional skills</b>:\r\n        {createField('My professional skills', 'lookingForAJobDescription', [], Textarea)}\r\n      </div>\r\n\r\n      <div>\r\n        <b>About me</b>:{createField('About me', 'aboutMe', [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key}>\r\n              <b>\r\n                {key}: {createField(key, 'contacts.' + key, [], Input)}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div>\r\n        <button>save</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from '../ProfileStatus/ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport userPhoto from '../../../assets/images/user.png';\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = e => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = formData => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.fullName}>{profile.fullName}</div>\r\n\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n\r\n      <div className={styles.profileData}>\r\n        <div>\r\n          <img\r\n            src={profile.photos.large || userPhoto}\r\n            className={styles.mainPhoto}\r\n            alt=\"\"\r\n          />\r\n          {isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={profile}\r\n            profile={profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div className={styles.profileDescription}>\r\n      <span>My Information: </span>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return (\r\n            <Contact\r\n              key={key}\r\n              contactTitle={key}\r\n              contactValue={profile.contacts[key]}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {isOwner && (\r\n        <div className={styles.editButton} onClick={goToEditMode}></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={styles.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import { profileAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst ADD_POST = 'samurai-network/profile/ADD_POST';\r\nconst SET_USER_PROFILE = 'samurai-network/users/SET_USER_PROFILE';\r\nconst SET_STATUS = 'samurai-network/profile/status/SET_STATUS';\r\nconst DELETE_POST = 'samurai-network/profile/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'samurai-network/profile/photo/SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: 'Hi, how are you?', likesCount: 12 },\r\n    { id: 2, message: \"It's my first post\", likesCount: 11 },\r\n    { id: 3, message: 'Blabla', likesCount: 11 },\r\n    { id: 4, message: 'Dada', likesCount: 11 },\r\n  ],\r\n  profile: null,\r\n  status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = {\r\n        id: state.posts.length + 1,\r\n        message: action.newPostText,\r\n        likesCount: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: '',\r\n      };\r\n    }\r\n    case SET_USER_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    }\r\n    case DELETE_POST:\r\n      return { ...state, posts: state.posts.filter((p) => p.id !== action.postId) };\r\n\r\n    case SAVE_PHOTO_SUCCESS:\r\n      debugger;\r\n      return { ...state, profile: { ...state.profile, photos: action.photos } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({\r\n  type: ADD_POST,\r\n  newPostText,\r\n});\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getProfile(userId);\r\n  dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId);\r\n  dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status));\r\n  }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n  let response = await profileAPI.savePhoto(file);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n  }\r\n};\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n  const userId = getState().auth.userId;\r\n  const response = await profileAPI.saveProfile(profile);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getUserProfile(userId));\r\n  } else {\r\n    dispatch(stopSubmit('edit-profile', { _error: response.data.messages[0] }));\r\n    return Promise.reject(response.data.messages[0]);\r\n  }\r\n};\r\n\r\nexport default profileReducer;\r\n","import React from 'react';\r\nimport styles from './Post.module.css';\r\nimport userPhoto from '../../../../assets/images/user.png';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={styles.item}>\r\n      <img src={userPhoto} alt=\"\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = props => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newPostText\"\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport AddNewPostForm from './AddNewPostForm/AddNewPostForm';\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map(p => (\r\n      <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n    ));\r\n\r\n  let onAddPost = values => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.postsBlock}>\r\n      <h4>My posts</h4>\r\n\r\n      <AddNewPostForm onSubmit={onAddPost} />\r\n\r\n      <div className={styles.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = props => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  savePhoto,\r\n  updateStatus,\r\n  saveProfile,\r\n} from '../../redux/profile-reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authorizedUserId: state.auth.userId,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <span className={styles.logo}>В REACT'Е</span>\r\n      <div className={styles.loginBlock}>\r\n        {props.isAuth ? (\r\n          <div>\r\n            {props.login} - <button onClick={props.logout}>Log out</button>{' '}\r\n          </div>\r\n        ) : (\r\n          <NavLink to={'/login'}>Login</NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case GET_CAPTCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { userId, email, login, isAuth },\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n  type: GET_CAPTCHA_URL_SUCCESS,\r\n  payload: { captchaUrl },\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let { id, login, email } = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(getCaptchaUrl());\r\n    }\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Error';\r\n    dispatch(stopSubmit('login', { _error: message }));\r\n  }\r\n};\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n  const response = await securityAPI.getCaptchaUrl();\r\n  const captchaUrl = response.data.url;\r\n  dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout();\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from '../../components/common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {createField('Email', 'email', [required], Input)}\r\n      {createField('Password', 'password', [required], Input, { type: 'password' })}\r\n      {createField(null, 'rememberMe', [], Input, { type: 'checkbox' }, 'remember me')}\r\n\r\n      {captchaUrl && <img src={captchaUrl} alt=\"\" />}\r\n      {captchaUrl && createField('Symbols from image', 'captcha', [required], Input, {})}\r\n\r\n      {error && <div className={styles.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login',\r\n})(LoginForm);\r\n\r\nconst LoginPage = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n  };\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginPage);\r\n","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  sidebar: sidebarReducer,\r\n  app: appReducer,\r\n});\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n// Chrome Redux Devtools\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nlet store = createStore(reducers, composeEnchancers(applyMiddleware(thunkMiddleware)));\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter, BrowserRouter } from 'react-router-dom';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/LoginPage/LoginPage';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\n// import UsersContainer from './components/Users/UsersContainer';\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\r\n\r\n          <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n\r\n          <React.Suspense fallback={<Preloader />}>\r\n            <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          </React.Suspense>\r\n\r\n          <Route path=\"/login\" render={() => <LoginPage />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized,\r\n});\r\n\r\nlet AppContainer = compose(withRouter, connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst SocialNetworkApp = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default SocialNetworkApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SocialNetworkApp from './App';\r\n\r\nReactDOM.render(<SocialNetworkApp />, document.getElementById('root'));\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1FWXx\",\"error\":\"FormsControls_error__2wOdM\",\"formSummaryError\":\"FormsControls_formSummaryError__3vc7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileInfo_profileData__3SrSm\",\"fullName\":\"ProfileInfo_fullName__nPbo5\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2dRZU\",\"profileDescription\":\"ProfileInfo_profileDescription__3NpCi\",\"contact\":\"ProfileInfo_contact__3fNjo\",\"editButton\":\"ProfileInfo_editButton__2TrP9\"};","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\nimport styles from './Preloader.module.css';\r\n\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div className={styles.preloader}>\r\n      <img src={preloader} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","module.exports = __webpack_public_path__ + \"static/media/user.2afd1c89.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kjaB\",\"logo\":\"Header_logo__2RpXr\",\"loginBlock\":\"Header_loginBlock__2x9P3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__18jrA\",\"posts\":\"MyPosts_posts__PRm42\"};"],"sourceRoot":""}